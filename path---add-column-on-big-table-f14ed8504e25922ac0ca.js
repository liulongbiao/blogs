webpackJsonp([0xf8bb319f4f1d],{366:function(n,s){n.exports={data:{site:{siteMetadata:{title:"Liu Longbiao Blog",author:"Liu Longbiao"}},markdownRemark:{id:"D:/workspace/gatsby/blogs/src/pages/2018/02/add-column-on-big-table.md absPath of file >>> MarkdownRemark",html:'<p>线上的 MySQL 数据库根据业务情况需要添加字段，以下是 DBA 给出的具体操作实例：</p>\n<p>小表情况下的添加逻辑：</p>\n<div class="gatsby-highlight">\n      <pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> ls_evaluate\n<span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> schoolId <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">AFTER</span> content<span class="token punctuation">;</span> \n<span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> idx_ls_evaluate_schoolId <span class="token punctuation">(</span>schoolId<span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">;</span>\n\n<span class="token keyword">UPDATE</span> ls_evaluate <span class="token number">a</span> <span class="token keyword">SET</span> \nschoolId <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token keyword">SELECT</span> schoolId <span class="token keyword">FROM</span> ls_lesson <span class="token number">b</span> \n  <span class="token keyword">WHERE</span> \n    <span class="token number">a</span><span class="token punctuation">.</span>courseSingleId <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span>courseSingleId\n    <span class="token operator">AND</span> <span class="token number">b</span><span class="token punctuation">.</span>isDeleted <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">WHERE</span> <span class="token number">a</span><span class="token punctuation">.</span>isDeleted <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>测试环境表信息：</p>\n<div class="gatsby-highlight">\n      <pre class="language-sql"><code><span class="token operator">></span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>evaluateId<span class="token punctuation">)</span> <span class="token keyword">from</span> ls_evaluate<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-------------------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span>evaluateId<span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-------------------+</span>\n<span class="token operator">|</span>          <span class="token number">26105089</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-------------------+</span>\n<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">3</span> min <span class="token number">11.86</span> sec<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-sql"><code><span class="token operator">></span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>courseSingleId<span class="token punctuation">)</span> <span class="token keyword">from</span> ls_lesson<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------------------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span>courseSingleId<span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------------------+</span>\n<span class="token operator">|</span>                <span class="token number">690643</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------------------+</span>\n</code></pre>\n      </div>\n<h2>增加字段、创建索引</h2>\n<ul>\n<li>备份表</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code>mysqldump -uroot -p -q --single-transaction lesson ls_evaluate <span class="token operator">></span> /otp/20180210_evaluate_backup.sql\n</code></pre>\n      </div>\n<p>先安装 <code>percona-toolkit</code>，使用里面的OSC工具执行了增加字段、创建索引的操作，花费时间20分钟。</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code>./bin/pt-online-schema-change -uroot -pcnstrong<span class="token comment">#123454321 -S /data/mysql01/mysql.sock --alter "ADD COLUMN schoolId  bigint(20) NOT NULL DEFAULT 0 AFTER content, ADD INDEX idx_ls_evaluate_schoolId (schoolId)" D=lesson,t=ls_evaluate --execute</span>\n</code></pre>\n      </div>\n<p>标准输出：</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>No slaves found.  See --recursion-method if host mysqlmq-107 has slaves.\nNot checking slave lag because no slaves were found and --check-slave-lag was not specified.\nOperation, tries, wait:\n  analyze_table, 10, 1\n  copy_rows, 10, 0.25\n  create_triggers, 10, 1\n  drop_triggers, 10, 1\n  swap_tables, 10, 1\n  update_foreign_keys, 10, 1\nAltering `lesson`.`ls_evaluate`...\nCreating new table...\nCreated new table lesson._ls_evaluate_new OK.\nAltering new table...\nAltered `lesson`.`_ls_evaluate_new` OK.\n2018-02-10T17:19:18 Creating triggers...\n2018-02-10T17:19:18 Created triggers OK.\n2018-02-10T17:19:18 Copying approximately 25421419 rows...\nCopying `lesson`.`ls_evaluate`:   2% 18:12 remain\n...\nCopying `lesson`.`ls_evaluate`:  91% 01:52 remain\nCopying `lesson`.`ls_evaluate`:  94% 01:17 remain\nCopying `lesson`.`ls_evaluate`:  96% 00:52 remain\nCopying `lesson`.`ls_evaluate`:  97% 00:28 remain\nCopying `lesson`.`ls_evaluate`:  99% 00:03 remain\n2018-02-10T17:43:11 Copied rows OK.\n2018-02-10T17:43:11 Swapping tables...\n2018-02-10T17:43:11 Swapped original and new tables OK.\n2018-02-10T17:43:11 Dropping old table...\n2018-02-10T17:43:11 Dropped old table `lesson`.`_ls_evaluate_old` OK.\n2018-02-10T17:43:11 Dropping triggers...\n2018-02-10T17:43:11 Dropped triggers OK.</code></pre>\n      </div>\n<h2>更新字段</h2>\n<p>尝试直接在表上面执行更新操作，执行了30分钟，一直卡死状态。\n写了一个存储过程，通过游标处理更新操作，执行时间37分。</p>\n<div class="gatsby-highlight">\n      <pre class="language-sql"><code><span class="token keyword">delimiter</span> $$\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> proc_update_table<span class="token punctuation">(</span><span class="token punctuation">)</span>\n     <span class="token keyword">BEGIN</span>\n     <span class="token comment">/* Declare Variables */</span>\n     <span class="token keyword">DECLARE</span> done_1 <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">FALSE</span><span class="token punctuation">;</span>\n     <span class="token keyword">DECLARE</span> v_courseSingleId <span class="token keyword">bigint</span><span class="token punctuation">;</span>\n\t <span class="token keyword">DECLARE</span> v_schoolId <span class="token keyword">bigint</span><span class="token punctuation">;</span>\n     <span class="token keyword">declare</span> the_query <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n     <span class="token comment">/* Declare Conditions */</span>\n     <span class="token keyword">DECLARE</span> not_found CONDITION <span class="token keyword">FOR</span> <span class="token number">1741</span><span class="token punctuation">;</span>\n    \n     <span class="token comment">/* Declare Cursors */</span>\n     <span class="token keyword">DECLARE</span> cur1 <span class="token keyword">CURSOR</span> <span class="token keyword">FOR</span> <span class="token keyword">select</span> courseSingleId<span class="token punctuation">,</span> schoolId <span class="token keyword">from</span> ls_lesson <span class="token number">b</span> <span class="token keyword">where</span> \n     <span class="token number">b</span><span class="token punctuation">.</span>isDeleted <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">order</span> <span class="token keyword">by</span> courseSingleId<span class="token punctuation">;</span>\n    \n     <span class="token comment">/* Declare Exception Handlers, usually with set actions */</span>\n     <span class="token comment">/* usually with set actions, the following handler has two forms,\n     /*>  one with begin .. end statements, and the other without */</span>\n     <span class="token keyword">DECLARE</span> <span class="token keyword">CONTINUE</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> <span class="token operator">NOT</span> FOUND <span class="token keyword">SET</span> done_1 <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">;</span>\n    \n         <span class="token keyword">OPEN</span> cur1<span class="token punctuation">;</span>\n         read_loop_1: LOOP\n         <span class="token keyword">FETCH</span> cur1 <span class="token keyword">INTO</span> v_courseSingleId<span class="token punctuation">,</span> v_schoolId<span class="token punctuation">;</span>\n     <span class="token keyword">IF</span> done_1 <span class="token operator">IS</span> <span class="token boolean">FALSE</span> <span class="token keyword">THEN</span>\n\t <span class="token keyword">set</span> <span class="token variable">@v_courseSingleId</span><span class="token operator">=</span>v_courseSingleId<span class="token punctuation">;</span>\n     <span class="token keyword">set</span> <span class="token variable">@v_schoolId</span><span class="token operator">=</span>v_schoolId<span class="token punctuation">;</span>\n         <span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token string">\'update ls_evaluate a set schoolId = \'</span><span class="token punctuation">,</span> <span class="token variable">@v_schoolId</span><span class="token punctuation">,</span> <span class="token string">\' where a.isDeleted = 0 and a.courseSingleId = \'</span><span class="token punctuation">,</span> <span class="token variable">@v_courseSingleId</span><span class="token punctuation">,</span> <span class="token string">\';\'</span><span class="token punctuation">)</span> <span class="token keyword">into</span> the_query<span class="token punctuation">;</span>\n     <span class="token keyword">SET</span> <span class="token variable">@stmt</span><span class="token operator">=</span>the_query<span class="token punctuation">;</span>\n     PREPARE STMT <span class="token keyword">FROM</span> <span class="token variable">@stmt</span><span class="token punctuation">;</span>\n     <span class="token keyword">EXECUTE</span> STMT<span class="token punctuation">;</span>\n     <span class="token keyword">DEALLOCATE</span> PREPARE STMT<span class="token punctuation">;</span>\n\t <span class="token keyword">commit</span><span class="token punctuation">;</span>\n     <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>\n         <span class="token keyword">IF</span> done_1 <span class="token keyword">THEN</span>\n         LEAVE read_loop_1<span class="token punctuation">;</span>\n     <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>\n     <span class="token keyword">END</span> LOOP read_loop_1<span class="token punctuation">;</span>\n     <span class="token keyword">CLOSE</span> cur1<span class="token punctuation">;</span>\n         <span class="token keyword">end</span>$$\n</code></pre>\n      </div>\n<p>执行存储过程：</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>>call proc_update_table();\nQuery OK, 0 rows affected, 1 warning (36 min 41.04 sec)</code></pre>\n      </div>\n<p>验证数据</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>>select count(a.schoolId) from ls_evaluate a, ls_lesson b \n    -> where a.courseSingleId = b.courseSingleId\n    -> and a.isDeleted = 0 and b.isDeleted = 0 and a.schoolId=0;\n+-------------------+\n| count(a.schoolId) |\n+-------------------+\n|                 0 |\n+-------------------+\n1 row in set (7.54 sec)</code></pre>\n      </div>\n<p>删除存储过程：</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>>drop procedure proc_update_table;</code></pre>\n      </div>\n<p>至此，整个在大表中添加字段过程完毕。</p>',frontmatter:{title:"在 MySQL 数据库大表中添加字段实例",date:"February 10, 2018"}}},pathContext:{path:"/add-column-on-big-table/"}}}});
//# sourceMappingURL=path---add-column-on-big-table-f14ed8504e25922ac0ca.js.map